name: Build and Sign AndroidAPS APK

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发
  pull_request:
  workflow_dispatch:  # 支持手动触发

jobs:
  build:
    name: Build and Sign APK
    runs-on: ubuntu-latest

    steps:
    # 检出代码
    - name: Checkout code
      uses: actions/checkout@v3

    # 设置 JDK 环境
    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    # 安装 Android SDK
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 33
        build-tools: 33.0.2
        ndk: 23.1.7779620

    # 授予权限
    - name: Grant execute permission
      run: chmod +x ./gradlew

    # 构建未签名 APK
    - name: Build unsigned APK
      run: ./gradlew assembleRelease

    # 安装签名工具
    - name: Install signing tools
      run: |
        sudo apt-get update
        sudo apt-get install zipalign apksigner

    # 签名 APK
    - name: Sign APK
      run: |
        cd app/build/outputs/apk/release/
        zipalign -v -p 4 app-release-unsigned.apk app-release-aligned.apk
        apksigner sign --ks release-key.jks --ks-pass pass:789789Fty --ks-key-alias my-key-alias --key-pass pass:789789Fty --out app-release-signed.apk app-release-aligned.apk

    # 上传签名的 APK
    - name: Upload signed APK as artifact
      uses: actions/upload-artifact@v3
      with:
        name: Signed-AndroidAPS-APK
        path: app/build/outputs/apk/release/app-release-signed.apk

    # 打印生成的 APK 路径 (调试用)
    - name: Debug APK path
      run: |
        echo "Listing APK files:"
        find ./ -name "*.apk"

    # 上传 keystore 文件到环境
    - name: Upload Keystore
      run: echo "${{ secrets.KEYSTORE }}" | base64 --decode > release-key.jks
